{
  "sections": {
    "styles": [
      {
        "category": "Category",
        "id": "styles-category-article",
        "articles": [
          {
            "id": "styles-category-article",
            "section": {
              "name": "styles",
              "styles": true
            },
            "category": "Category",
            "heading": "Article",
            "code": [],
            "markup": [],
            "comment": "<p>Some comments about this thing.</p>",
            "priority": 50,
            "filelocation": "about.md"
          }
        ]
      },
      {
        "category": "Category TEST",
        "id": "styles-category_test-another_article",
        "articles": [
          {
            "id": "styles-category_test-another_article",
            "section": {
              "name": "styles",
              "styles": true
            },
            "category": "Category TEST",
            "heading": "Another Article",
            "code": [],
            "markup": [],
            "comment": "<p>Some more comments about this other thing.</p>",
            "priority": 50,
            "filelocation": "about.md"
          }
        ]
      },
      {
        "category": "Layout",
        "id": "styles-layout-arrangement_object",
        "articles": [
          {
            "id": "styles-layout-arrangement_object",
            "section": {
              "name": "styles",
              "styles": true
            },
            "category": "Layout",
            "heading": "Arrangement object",
            "code": [
              "<!-- Default arrangement (using arrange__media and arrange__body) -->\n<div class=\"arrange\">\n    <div class=\"arrange__media\">\n        <img src=\"http://placehold.it/60x50\" alt=\"placeholder image\">\n    </div>\n    <div class=\"arrange__body\">\n        Content that is vertically (middle) aligned with the image.\n    </div>\n</div>",
              "<!-- Bottom Arrangement (using arrange__fit and arrange__fill)-->\n<div class=\"arrange arrange--bottom\">\n    <div class=\"arrange__fit\">\n        <img src=\"http://placehold.it/60x50\" alt=\"placeholder image\">\n    </div>\n    <div class=\"arrange__fill arrange__body\">\n        Content that is bottom aligned to the image.\n    </div>\n</div>",
              "<!-- Equal width arrangement-->\n<div class=\"arrange arrange--equal\">\n    <div class=\"arrange__fill\">\n        Equal width columns.\n    </div>\n    <div class=\"arrange__fill arrange__media\">\n        <img src=\"http://placehold.it/120x80\" alt=\"placeholder image\">\n    </div>\n    <div class=\"arrange__fill arrange__body\">\n        Can be as many columns as you want.\n    </div>\n</div>"
            ],
            "markup": [
              "<span class=\"hljs-comment\">&lt;!-- Default arrangement (using arrange__media and arrange__body) --&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"arrange\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"arrange__media\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">img</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">\"http://placehold.it/60x50\"</span> <span class=\"hljs-attr\">alt</span>=<span class=\"hljs-string\">\"placeholder image\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"arrange__body\"</span>&gt;</span>\n        Content that is vertically (middle) aligned with the image.\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>",
              "<span class=\"hljs-comment\">&lt;!-- Bottom Arrangement (using arrange__fit and arrange__fill)--&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"arrange arrange--bottom\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"arrange__fit\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">img</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">\"http://placehold.it/60x50\"</span> <span class=\"hljs-attr\">alt</span>=<span class=\"hljs-string\">\"placeholder image\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"arrange__fill arrange__body\"</span>&gt;</span>\n        Content that is bottom aligned to the image.\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>",
              "<span class=\"hljs-comment\">&lt;!-- Equal width arrangement--&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"arrange arrange--equal\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"arrange__fill\"</span>&gt;</span>\n        Equal width columns.\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"arrange__fill arrange__media\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">img</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">\"http://placehold.it/120x80\"</span> <span class=\"hljs-attr\">alt</span>=<span class=\"hljs-string\">\"placeholder image\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"arrange__fill arrange__body\"</span>&gt;</span>\n        Can be as many columns as you want.\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>"
            ],
            "comment": "<p>Creates an image-content block that vertically aligns images and text (centered, bottom, or top).</p><p><strong>Children of the <code class=\"sg-code sg-codespan\">arrange</code> wrapper can be given four classes:</strong></p><ul>\n<li><code class=\"sg-code sg-codespan\">arrange__fit</code> or <code class=\"sg-code sg-codespan\">arrange__media</code> will create a block that fits the width of its content (useful for images and media).</li>\n<li><code class=\"sg-code sg-codespan\">arrange__fill</code> will fill the remaining space.</li>\n<li><code class=\"sg-code sg-codespan\">arrange__body</code> is similar to <code class=\"sg-code sg-codespan\">arrange__fill</code> but defaults to middle alignment.</li>\n</ul>",
            "priority": 50
          },
          {
            "id": "styles-layout-media_object",
            "section": {
              "name": "styles",
              "styles": true
            },
            "category": "Layout",
            "heading": "Media Object",
            "code": [
              "<div class=\"media\">\n    <img class=\"media__media\" src=\"http://placehold.it/155x75\" alt=\"placeholder image\">\n    <p class=\"media__body\">\n        Content that sits to the right of the image but will never wrap underneath the image to the left. Etiam porta sem malesuada magna mollis euismod. Cras justo odio, dapibus ac facilisis in, egestas eget quam.\n    </p>\n</div>"
            ],
            "markup": [
              "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"media\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">img</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"media__media\"</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">\"http://placehold.it/155x75\"</span> <span class=\"hljs-attr\">alt</span>=<span class=\"hljs-string\">\"placeholder image\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"media__body\"</span>&gt;</span>\n        Content that sits to the right of the image but will never wrap underneath the image to the left. Etiam porta sem malesuada magna mollis euismod. Cras justo odio, dapibus ac facilisis in, egestas eget quam.\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>"
            ],
            "comment": "<p>Isolates an image from text wrapping underneath. Useful for creating an association between an image and text. Often used with an icon or avatar. Adding other classes to the <code class=\"sg-code sg-codespan\">isolate_body</code> can create a more stylized version.</p>",
            "priority": 50
          }
        ]
      },
      {
        "category": "Lists",
        "id": "styles-lists-bordered_lists",
        "articles": [
          {
            "id": "styles-lists-bordered_lists",
            "section": {
              "name": "styles",
              "styles": true
            },
            "category": "Lists",
            "heading": "Bordered Lists",
            "code": [
              "<ul class=\"list_bordered\">\n    <li>List Item</li>\n    <li>List Item</li>\n    <li>List Item</li>\n</ul>",
              "<ul class=\"list_bordered--short\">\n    <li>List Item</li>\n    <li>List Item</li>\n    <li>List Item</li>\n</ul>"
            ],
            "markup": [
              "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ul</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"list_bordered\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">li</span>&gt;</span>List Item<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">li</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">li</span>&gt;</span>List Item<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">li</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">li</span>&gt;</span>List Item<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">li</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ul</span>&gt;</span>",
              "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ul</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"list_bordered--short\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">li</span>&gt;</span>List Item<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">li</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">li</span>&gt;</span>List Item<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">li</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">li</span>&gt;</span>List Item<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">li</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ul</span>&gt;</span>"
            ],
            "comment": "<p>Creates a list with borders above and below each list item.</p><p>Appending <code class=\"sg-code sg-codespan\">list_bordered</code> with <code class=\"sg-code sg-codespan\">--short</code> will reduce the padding between each item.</p>",
            "priority": "last"
          },
          {
            "id": "styles-lists-navigation_list",
            "section": {
              "name": "styles",
              "styles": true
            },
            "category": "Lists",
            "heading": "Navigation List",
            "code": [
              "<ul class=\"list_nav\">\n    <li>\n        <a href=\"#\">List Item</a>\n    </li>\n    <li>\n        <a href=\"#\">List Item</a>\n    </li>\n    <li>\n        <a href=\"#\">List Item</a>\n    </li>\n</ul>"
            ],
            "markup": [
              "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ul</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"list_nav\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">li</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">a</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">\"#\"</span>&gt;</span>List Item<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">a</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">li</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">li</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">a</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">\"#\"</span>&gt;</span>List Item<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">a</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">li</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">li</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">a</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">\"#\"</span>&gt;</span>List Item<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">a</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">li</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ul</span>&gt;</span>"
            ],
            "comment": "<p>List where anchor tags fill the space of their containers. Useful as a modifier class. Can be used on any item with multiple child anchors (doesn&#x2019;t have to be an <code class=\"sg-code sg-codespan\">ol</code> or <code class=\"sg-code sg-codespan\">ul</code>).</p>",
            "priority": "last"
          },
          {
            "id": "styles-lists-",
            "section": {
              "name": "styles",
              "styles": true
            },
            "category": "Lists",
            "heading": "",
            "code": [
              "<ul>\n    <li>List Item\n        <ul>\n            <li>Nested List Item</li>\n        </ul>\n    </li>\n    <li>List Item</li>\n    <li>List Item</li>\n</ul>"
            ],
            "markup": [
              "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ul</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">li</span>&gt;</span>List Item\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ul</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">li</span>&gt;</span>Nested List Item<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">li</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ul</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">li</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">li</span>&gt;</span>List Item<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">li</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">li</span>&gt;</span>List Item<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">li</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ul</span>&gt;</span>"
            ],
            "comment": "<p>A list without a class is rendered normally. All lists can be given a class that will modify how its children will be styled.</p>",
            "priority": -1000
          },
          {
            "id": "styles-lists-inline_lists",
            "section": {
              "name": "styles",
              "styles": true
            },
            "category": "Lists",
            "heading": "Inline Lists",
            "code": [
              "<ul class=\"list_inline\">\n    <li>List Item</li>\n    <li>List Item</li>\n    <li>List Item</li>\n</ul>"
            ],
            "markup": [
              "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ul</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"list_inline\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">li</span>&gt;</span>List Item<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">li</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">li</span>&gt;</span>List Item<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">li</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">li</span>&gt;</span>List Item<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">li</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ul</span>&gt;</span>"
            ],
            "comment": "<p>A list where each item is in a row, with spacing to the right of each item.</p>",
            "priority": 1
          },
          {
            "id": "styles-lists-breadcrumbs",
            "section": {
              "name": "styles",
              "styles": true
            },
            "category": "Lists",
            "heading": "Breadcrumbs",
            "code": [
              "<ul class=\"breadcrumbs\">\n    <li class=\"breadcrumb\">List Item</li>\n    <li class=\"breadcrumb\">List Item</li>\n    <li class=\"breadcrumb\">List Item</li>\n</ul>"
            ],
            "markup": [
              "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ul</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"breadcrumbs\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">li</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"breadcrumb\"</span>&gt;</span>List Item<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">li</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">li</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"breadcrumb\"</span>&gt;</span>List Item<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">li</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">li</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"breadcrumb\"</span>&gt;</span>List Item<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">li</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ul</span>&gt;</span>"
            ],
            "comment": "<p>A list where each item is in a row, with a &#x25B8; between each item.</p>",
            "priority": 3
          }
        ]
      }
    ],
    "development": [],
    "Sass stuff": [
      {
        "category": "Colors",
        "id": "sass_stuff-colors-",
        "articles": [
          {
            "id": "sass_stuff-colors-",
            "section": {
              "name": "Sass stuff",
              "sassStuff": true
            },
            "category": "Colors",
            "heading": "",
            "code": [],
            "markup": [],
            "comment": "<p>Colors can be defined in the <code id=\"variable--base-colors\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$base-colors\">$base-colors</code> variable and referenced via the <code id=\"function-colors\" class=\"sg-global-function sg-code sg-codespan sg-global\" data-code-id=\"colors()\">colors()</code> function.</p>",
            "priority": -1000
          },
          {
            "id": "sass_stuff-colors-definition",
            "section": {
              "name": "Sass stuff",
              "sassStuff": true
            },
            "category": "Colors",
            "heading": "Definition",
            "code": [],
            "markup": [],
            "comment": "<h2 id=\"-base-colors\" class=\"sg-heading sg-heading-2\"><code id=\"variable--base-colors\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$base-colors\">$base-colors</code></h2>\n<h3 id=\"map-key-color-value-\" class=\"sg-heading sg-heading-3\">Map (key : color value)</h3>\n<p>Sets up consistent color names to be used for color-palette. Dark and light values will be automatically generated. Key values should be accessed through <code id=\"function-colors\" class=\"sg-global-function sg-code sg-codespan sg-global\" data-code-id=\"colors()\">colors()</code>.\n<br>\n<code class=\"sg-code sg-codespan\">type</code>, <code class=\"sg-code sg-codespan\">links</code>, and <code class=\"sg-code sg-codespan\">bg</code> key values are required for some starter styles. If you choose not to use them, you need to replace their references.</p><p>Supports a nested map style like the following:</p>\n<div class=\"sg-markup sg-codeblock\">\n<pre class=\"sg-markup_wrap\"><code class=\"hljs sg-code  \"><span class=\"hljs-variable\">$base-colors</span>: (\n    <span class=\"hljs-string\">&apos;type&apos;</span>: (\n        <span class=\"hljs-string\">&apos;base&apos;</span>: <span class=\"hljs-number\">#020202</span>,\n        <span class=\"hljs-string\">&apos;light&apos;</span>: <span class=\"hljs-number\">#232323</span>,\n        <span class=\"hljs-string\">&apos;dark&apos;</span>: <span class=\"hljs-number\">#000</span>\n    ),\n    <span class=\"hljs-string\">&apos;links&apos;</span>: (\n        <span class=\"hljs-string\">&apos;base&apos;</span>: blue,\n        <span class=\"hljs-string\">&apos;light&apos;</span>: sky,\n        <span class=\"hljs-string\">&apos;dark&apos;</span>: navy\n    ),\n    <span class=\"hljs-string\">&apos;bg&apos;</span>: (\n        <span class=\"hljs-string\">&apos;base&apos;</span>: <span class=\"hljs-number\">#fff</span>,\n        <span class=\"hljs-string\">&apos;dark&apos;</span>: <span class=\"hljs-number\">#ddd</span>\n    )\n);\n</code></pre>\n</div>",
            "priority": 50
          },
          {
            "id": "sass_stuff-colors-manipulation",
            "section": {
              "name": "Sass stuff",
              "sassStuff": true
            },
            "category": "Colors",
            "heading": "Manipulation",
            "code": [],
            "markup": [],
            "comment": "<h2 id=\"generate-color-varations-\" class=\"sg-heading sg-heading-2\"><code id=\"function-generate-color-varations\" class=\"sg-global-function sg-code sg-codespan sg-global\" data-code-id=\"generate-color-varations()\">generate-color-varations()</code></h2>\n<h3 id=\"function-map-functions-increments-variations-blending-colors-\" class=\"sg-heading sg-heading-3\">function( <code class=\"sg-code sg-codespan\">$map, $functions, $increments, $variations, $blending-colors</code> )</h3>\n<p>Takes base color values and generates a full color palette. Used by the <code id=\"variable--base-colors\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$base-colors\">$base-colors</code> map to create a project&#x2019;s palette, accessible via <code id=\"function-colors\" class=\"sg-global-function sg-code sg-codespan sg-global\" data-code-id=\"colors()\">colors()</code>.</p><p><strong>Arguments:</strong></p><ul>\n<li><code class=\"sg-code sg-codespan\">$map</code>: Color map you want to create variations of. Defaults to <code id=\"variable--base-colors\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$base-colors\">$base-colors</code>.</li>\n<li><code class=\"sg-code sg-codespan\">$functions</code>: color functions used to generate variations (e.g. lighten or darken). Can use any <code class=\"sg-code sg-codespan\">blend</code> function, provided <code class=\"sg-code sg-codespan\">$blending-colors</code> are provided.</li>\n<li><code class=\"sg-code sg-codespan\">$increments</code>: percentage amount to apply <code class=\"sg-code sg-codespan\">$function</code> to each <code class=\"sg-code sg-codespan\">$variations</code>.</li>\n<li><code class=\"sg-code sg-codespan\">$variations</code>: actual names for each color tone when <code id=\"function-colors\" class=\"sg-global-function sg-code sg-codespan sg-global\" data-code-id=\"colors()\">colors()</code> used.</li>\n<li><code class=\"sg-code sg-codespan\">$blending-colors</code>: used when a function is a <code class=\"sg-code sg-codespan\">blend</code>. Can be a list or a single color.</li>\n</ul>\n<p data-code-meta=\"requires\" class=\"sg-code-meta sg-code-meta-value\"> <code class=\"sg-code sg-codespan\"> <code id=\"function-combine-color-maps\" class=\"sg-global-function sg-code sg-codespan sg-global\" data-code-id=\"combine-color-maps()\">combine-color-maps()</code></code> </p>",
            "priority": 50,
            "filelocation": "tools/_t-color-functions.scss"
          }
        ]
      },
      {
        "category": "Config",
        "id": "sass_stuff-config-grid_settings",
        "articles": [
          {
            "id": "sass_stuff-config-grid_settings",
            "section": {
              "name": "Sass stuff",
              "sassStuff": true
            },
            "category": "Config",
            "heading": "Grid Settings",
            "code": [],
            "markup": [],
            "comment": "<h2 id=\"-max-site-width-pixel\" class=\"sg-heading sg-heading-2\"><code id=\"variable--max-site-width\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$max-site-width\">$max-site-width</code> - Pixel</h2>\n<p>Maximum desktop width for the site wrapper.</p><h2 id=\"-grid-gutter-pixel\" class=\"sg-heading sg-heading-2\"><code id=\"variable--grid-gutter\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$grid-gutter\">$grid-gutter</code> - Pixel</h2>\n<p>Space between grid items. Also used in <code id=\"function-type-space\" class=\"sg-global-function sg-code sg-codespan sg-global\" data-code-id=\"type-space()\">type-space()</code> for horizontal spacing units.</p><h2 id=\"-max-site-width-pixel\" class=\"sg-heading sg-heading-2\"><code id=\"variable--max-site-width\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$max-site-width\">$max-site-width</code> - Pixel</h2>\n<p>Maximum desktop width for the site wrapper.</p><h2 id=\"-grid-columns-number\" class=\"sg-heading sg-heading-2\"><code id=\"variable--grid-columns\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$grid-columns\">$grid-columns</code> - Number</h2>\n<p>Base number of grid columns to be generated. Note that any column number will include all fractions of the fewer columns. For instance, a 12-column grid would also include all fractions of 1-12 (including things like three-sevenths).</p><h2 id=\"-grid-gutter-pixel\" class=\"sg-heading sg-heading-2\"><code id=\"variable--grid-gutter\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$grid-gutter\">$grid-gutter</code> - Pixel</h2>\n<p>Space between grid items. Also used in <code id=\"function-type-space\" class=\"sg-global-function sg-code sg-codespan sg-global\" data-code-id=\"type-space()\">type-space()</code> for horizontal spacing units.</p>",
            "priority": 50
          },
          {
            "id": "sass_stuff-config-typography_settings",
            "section": {
              "name": "Sass stuff",
              "sassStuff": true
            },
            "category": "Config",
            "heading": "Typography Settings",
            "code": [],
            "markup": [],
            "comment": "<h2 id=\"-base-font-size-pixel\" class=\"sg-heading sg-heading-2\"><code id=\"variable--base-font-size\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$base-font-size\">$base-font-size</code> - Pixel</h2>\n<p>Font size all other values will use for calculation. Will be converted to <code class=\"sg-code sg-codespan\">rems</code>.</p><h2 id=\"-base-line-height-pixel\" class=\"sg-heading sg-heading-2\"><code id=\"variable--base-line-height\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$base-line-height\">$base-line-height</code> - Pixel</h2>\n<p>Line-height for base font-size. Will be used to determine the vertical spacing values when <code id=\"function-type-space\" class=\"sg-global-function sg-code sg-codespan sg-global\" data-code-id=\"type-space()\">type-space()</code> is used.</p><h2 id=\"-font-looseness-percentage\" class=\"sg-heading sg-heading-2\"><code id=\"variable--font-looseness\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$font-looseness\">$font-looseness</code> - Percentage</h2>\n<p>What to base the tightness/looseness of automatically-generated <code class=\"sg-code sg-codespan\">line-heights</code>.</p><h2 id=\"-auto-scale-type-boolean\" class=\"sg-heading sg-heading-2\"><code id=\"variable--auto-scale-type\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$auto-scale-type\">$auto-scale-type</code> - Boolean</h2>\n<p>Uses <code id=\"variable--scale-ratio\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$scale-ratio\">$scale-ratio</code> to create font sizes for headings starting from the <code id=\"variable--base-font-size\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$base-font-size\">$base-font-size</code>.</p><h2 id=\"-scale-ratio-number-float-\" class=\"sg-heading sg-heading-2\"><code id=\"variable--scale-ratio\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$scale-ratio\">$scale-ratio</code> - Number (float)</h2>\n<p>Used for <code id=\"variable--auto-scale-type\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$auto-scale-type\">$auto-scale-type</code> and for <code id=\"function-modular-scale\" class=\"sg-global-function sg-code sg-codespan sg-global\" data-code-id=\"modular-scale()\">modular-scale()</code>.</p><h2 id=\"-rem-px-fallback-boolean\" class=\"sg-heading sg-heading-2\"><code id=\"variable--rem-px-fallback\" class=\"sg-global-variable sg-code sg-codespan sg-global\" data-code-id=\"$rem-px-fallback\">$rem-px-fallback</code> - Boolean</h2>\n<p>Determines whether <code id=\"function-rems\" class=\"sg-global-function sg-code sg-codespan sg-global\" data-code-id=\"rems()\">rems()</code> conversion includes a pixel-value fallback for older browsers like IE8.</p>",
            "priority": 50
          }
        ]
      }
    ]
  },
  "menus": {
    "styles": [
      {
        "category": "Category",
        "id": "styles-category-article",
        "headings": [
          {
            "id": "styles-category-article",
            "name": "Article"
          }
        ]
      },
      {
        "category": "Category TEST",
        "id": "styles-category_test-another_article",
        "headings": [
          {
            "id": "styles-category_test-another_article",
            "name": "Another Article"
          }
        ]
      },
      {
        "category": "Layout",
        "id": "styles-layout-arrangement_object",
        "headings": [
          {
            "id": "styles-layout-arrangement_object",
            "name": "Arrangement object"
          },
          {
            "id": "styles-layout-media_object",
            "name": "Media Object"
          }
        ]
      },
      {
        "category": "Lists",
        "id": "styles-lists-bordered_lists",
        "headings": [
          {
            "id": "styles-lists-bordered_lists",
            "name": "Bordered Lists"
          },
          {
            "id": "styles-lists-navigation_list",
            "name": "Navigation List"
          },
          {
            "id": "styles-lists-",
            "name": "Lists"
          },
          {
            "id": "styles-lists-inline_lists",
            "name": "Inline Lists"
          },
          {
            "id": "styles-lists-breadcrumbs",
            "name": "Breadcrumbs"
          }
        ]
      }
    ],
    "development": [],
    "Sass stuff": [
      {
        "category": "Colors",
        "id": "sass_stuff-colors-",
        "headings": [
          {
            "id": "sass_stuff-colors-",
            "name": "Colors"
          },
          {
            "id": "sass_stuff-colors-definition",
            "name": "Definition"
          },
          {
            "id": "sass_stuff-colors-manipulation",
            "name": "Manipulation"
          }
        ]
      },
      {
        "category": "Config",
        "id": "sass_stuff-config-grid_settings",
        "headings": [
          {
            "id": "sass_stuff-config-grid_settings",
            "name": "Grid Settings"
          },
          {
            "id": "sass_stuff-config-typography_settings",
            "name": "Typography Settings"
          }
        ]
      }
    ]
  },
  "colors": {},
  "customVariables": {
    "pageTitle": "Style Guide",
    "tocMenu": true
  }
}